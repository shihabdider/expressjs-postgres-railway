!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/user1/projects/tests/test-railway-express/expressjs-postgres-railway/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/83342344/
@types/body-parser	package.json	/^    "@types\/body-parser": "^1.19.0",$/;"	s	object:devDependencies
@types/express	package.json	/^    "@types\/express": "^4.17.11",$/;"	s	object:devDependencies
@types/pg	package.json	/^    "@types\/pg": "^7.14.9",$/;"	s	object:devDependencies
ExpressJS Postgres Example	README.md	/^# ExpressJS Postgres Example$/;"	c
app	src/index.ts	/^const app = express();$/;"	C
author	package.json	/^  "author": "Jake Runzer",$/;"	s
body-parser	package.json	/^    "body-parser": "^1.19.0",$/;"	s	object:dependencies
build	package.json	/^    "build": "tsc",$/;"	s	object:scripts
compilerOptions	tsconfig.json	/^  "compilerOptions": {$/;"	o
dependencies	package.json	/^  "dependencies": {$/;"	o
dev	package.json	/^    "dev": "nodemon src\/index.ts",$/;"	s	object:scripts
devDependencies	package.json	/^  "devDependencies": {$/;"	o
esModuleInterop	tsconfig.json	/^    "esModuleInterop": true,$/;"	b	object:compilerOptions
express	package.json	/^    "express": "^4.17.1",$/;"	s	object:dependencies
forceConsistentCasingInFileNames	tsconfig.json	/^    "forceConsistentCasingInFileNames": true$/;"	b	object:compilerOptions
incremental	tsconfig.json	/^    "incremental": true,$/;"	b	object:compilerOptions
license	package.json	/^  "license": "MIT",$/;"	s
main	package.json	/^  "main": "dist\/index.js",$/;"	s
module	tsconfig.json	/^    "module": "commonjs",$/;"	s	object:compilerOptions
name	package.json	/^  "name": "expressjs-postgres",$/;"	s
nodemon	package.json	/^    "nodemon": "^2.0.7",$/;"	s	object:devDependencies
outDir	tsconfig.json	/^    "outDir": "dist",$/;"	s	object:compilerOptions
pg	package.json	/^    "pg": "^8.5.1"$/;"	s	object:dependencies
pool	src/index.ts	/^const pool = new pg.Pool();$/;"	C
port	src/index.ts	/^const port = process.env.PORT || 3333;$/;"	C
private	package.json	/^  "private": true,$/;"	b
rows	src/index.ts	/^  const { rows } = await pool.query("SELECT * FROM jokes");$/;"	C
rows	src/index.ts	/^  const { rows } = await pool.query("SELECT NOW()");$/;"	C
scripts	package.json	/^  "scripts": {$/;"	o
skipLibCheck	tsconfig.json	/^    "skipLibCheck": true,$/;"	b	object:compilerOptions
start	package.json	/^    "start": "node dist\/index.js"$/;"	s	object:scripts
strict	tsconfig.json	/^    "strict": true,$/;"	b	object:compilerOptions
target	tsconfig.json	/^    "target": "es6",$/;"	s	object:compilerOptions
ts-node	package.json	/^    "ts-node": "^9.1.1",$/;"	s	object:devDependencies
typescript	package.json	/^    "typescript": "^4.1.3"$/;"	s	object:devDependencies
version	package.json	/^  "version": "1.0.0",$/;"	s
‚ú® Features	README.md	/^## ‚ú® Features$/;"	s	chapter:ExpressJS Postgres Example
üíÅ‚Äç‚ôÄÔ∏è How to use	README.md	/^## üíÅ‚Äç‚ôÄÔ∏è How to use$/;"	s	chapter:ExpressJS Postgres Example
üìù Notes	README.md	/^## üìù Notes$/;"	s	chapter:ExpressJS Postgres Example
